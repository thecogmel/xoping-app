{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/erick/Documentos/xoping-app/src/components/MultipleChoice/index.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport firebase from 'firebase';\nimport Add from \"../Add\";\n\nclass MultipleChoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: []\n    };\n  }\n\n  createUI() {\n    return this.state.values.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: el || '',\n        onChange: this.componentDidUpdate(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"remove\",\n        onClick: this.removeClick.bind(this, i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this));\n  }\n\n  handleChange(i, event) {\n    let values = [...this.state.values];\n    values[i] = event.target.value;\n    this.setState({\n      values\n    });\n  }\n\n  handleChanged(i, event) {\n    firebase.database().ref('/cesta').set(i);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.userID !== prevProps.userID) {\n      this.fetchData(this.props.userID);\n    }\n  }\n\n  addClick() {\n    this.setState(prevState => ({\n      values: [...prevState.values, '']\n    }));\n  }\n\n  removeClick(i) {\n    let values = [...this.state.values];\n    values.splice(i, 1);\n    this.setState({\n      values\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [this.createUI(), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"add more\",\n        onClick: this.addClick.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MultipleChoice;","map":{"version":3,"sources":["/home/erick/Documentos/xoping-app/src/components/MultipleChoice/index.js"],"names":["React","Component","useEffect","useState","firebase","Add","MultipleChoice","constructor","props","state","values","createUI","map","el","i","componentDidUpdate","removeClick","bind","handleChange","event","target","value","setState","handleChanged","database","ref","set","prevProps","userID","fetchData","addClick","prevState","splice","render","handleSubmit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACD;;AAEDC,EAAAA,QAAQ,GAAE;AACP,WAAO,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,GAAlB,CAAsB,CAACC,EAAD,EAAKC,CAAL,kBACzB;AAAA,8BACG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAED,EAAE,IAAE,EAA9B;AAAkC,QAAA,QAAQ,EAAE,KAAKE,kBAAL,CAAwB,IAAxB;AAA5C;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BH,CAA5B;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA,OAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,YADG,CAAP;AAMF;;AAEDI,EAAAA,YAAY,CAACJ,CAAD,EAAIK,KAAJ,EAAW;AACpB,QAAIT,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAb;AACAA,IAAAA,MAAM,CAACI,CAAD,CAAN,GAAYK,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACF;;AAEDa,EAAAA,aAAa,CAACT,CAAD,EAAIK,KAAJ,EAAW;AACpBf,IAAAA,QAAQ,CAACoB,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,EAAkCC,GAAlC,CAAsCZ,CAAtC;AACH;;AAEDC,EAAAA,kBAAkB,CAACY,SAAD,EAAY;AAC1B;AACA,QAAI,KAAKnB,KAAL,CAAWoB,MAAX,KAAsBD,SAAS,CAACC,MAApC,EAA4C;AAC1C,WAAKC,SAAL,CAAe,KAAKrB,KAAL,CAAWoB,MAA1B;AACD;AAAC;;AAENE,EAAAA,QAAQ,GAAE;AACR,SAAKR,QAAL,CAAcS,SAAS,KAAK;AAAErB,MAAAA,MAAM,EAAE,CAAC,GAAGqB,SAAS,CAACrB,MAAd,EAAsB,EAAtB;AAAV,KAAL,CAAvB;AACD;;AAEDM,EAAAA,WAAW,CAACF,CAAD,EAAG;AACX,QAAIJ,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAb;AACAA,IAAAA,MAAM,CAACsB,MAAP,CAAclB,CAAd,EAAgB,CAAhB;AACA,SAAKQ,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACF;;AAEDuB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,iBACK,KAAKvB,QAAL,EADL,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,UAA3B;AAAsC,QAAA,OAAO,EAAE,KAAKmB,QAAL,CAAcb,IAAd,CAAmB,IAAnB;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhDkC;;AAmDvC,eAAeX,cAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport firebase from 'firebase';\nimport Add from \"../Add\";\n\nclass MultipleChoice extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { values: [] };\n    }\n\n    createUI(){\n       return this.state.values.map((el, i) => \n           <div key={i}>\n              <input type=\"text\" value={el||''} onChange={this.componentDidUpdate(this)} />\n              <input type='button' value='remove' onClick={this.removeClick.bind(this, i)}/>\n           </div>          \n       )\n    }\n\n    handleChange(i, event) {\n       let values = [...this.state.values];\n       values[i] = event.target.value;\n       this.setState({ values });\n    }\n    \n    handleChanged(i, event) {\n        firebase.database().ref('/cesta').set(i)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.userID !== prevProps.userID) {\n          this.fetchData(this.props.userID);\n        }}\n    \n    addClick(){\n      this.setState(prevState => ({ values: [...prevState.values, '']}))\n    }\n    \n    removeClick(i){\n       let values = [...this.state.values];\n       values.splice(i,1);\n       this.setState({ values });\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n            {this.createUI()}        \n            <input type='button' value='add more' onClick={this.addClick.bind(this)}/>\n        </form>\n      );\n    }\n}\n\nexport default MultipleChoice;"]},"metadata":{},"sourceType":"module"}