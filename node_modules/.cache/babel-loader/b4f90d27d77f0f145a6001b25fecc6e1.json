{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/erick/Documentos/xoping-app/src/components/Todo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport firebase from 'firebase';\nimport './styles.css';\n\nfunction Todo() {\n  _s();\n\n  const [lista, setLista] = useState([{\n    id: Math.floor(Math.random() * 100),\n    value: '',\n    isChecked: false\n  }]);\n\n  function handleChange(list) {\n    firebase.database().ref('/').set(list);\n  }\n\n  function handleDelete(id) {\n    const newLista = lista.filter(number => {\n      if (number.id !== id) {\n        return number;\n      }\n    });\n    setLista(newLista);\n    handleChange(newLista);\n  }\n\n  function editListItem(value, id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return { ...number,\n          value\n        };\n      }\n\n      return number;\n    });\n    setLista(newLista);\n    handleChange(newLista);\n  }\n\n  function toggleChecked(id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return { ...number,\n          isChecked: !number.isChecked\n        };\n      }\n\n      return number;\n    });\n    setLista(newLista);\n    handleChange(newLista);\n  }\n\n  useEffect(handleDelete, []);\n\n  function addLista() {\n    setLista([...lista, {\n      id: Math.floor(Math.random() * 100),\n      value: '',\n      isChecked: false\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sua lista de compras\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), lista.map(number => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cesta\",\n        children: [/*#__PURE__*/_jsxDEV(DragIndicatorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: number.isChecked,\n          onChange: () => toggleChecked(number.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Digite o nome do novo item...\",\n          value: number.value,\n          onChange: e => editListItem(e.target.value, number.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ed => handleDelete(number.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, number.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addLista,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), \"Adicione um novo item...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"k1Gzj9+ioB3ZT3mTCyXA16AtVUo=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/erick/Documentos/xoping-app/src/components/Todo/index.js"],"names":["React","useEffect","useState","DragIndicatorIcon","Checkbox","firebase","Todo","lista","setLista","id","Math","floor","random","value","isChecked","handleChange","list","database","ref","set","handleDelete","newLista","filter","number","editListItem","map","toggleChecked","addLista","e","target","ed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport firebase from 'firebase'\n\nimport './styles.css';\n\nfunction Todo() {\n\n  const [lista, setLista] = useState([{ id: (Math.floor(Math.random() * 100)), value: '', isChecked: false }]);\n\n  function handleChange(list) {\n    firebase.database().ref('/').set(list);\n  }\n\n  function handleDelete(id) {\n    const newLista = lista.filter(number => {\n      if (number.id !== id) {\n        return number;\n      }\n    });\n    setLista(newLista);\n    handleChange(newLista);\n  }\n\n  function editListItem(value, id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return ({...number, value})\n      }\n\n      return number;\n    });\n    setLista(newLista);\n    handleChange(newLista);\n  }\n\n  function toggleChecked(id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return ({...number, isChecked:!number.isChecked})\n      }\n\n      return number;\n    });\n    setLista(newLista);\n    handleChange(newLista);\n  }\n\n  useEffect(handleDelete, [])\n\n  function addLista() {\n    setLista([\n      ...lista,\n      { id: (Math.floor(Math.random() * 100)), value: '', isChecked: false }\n    ])\n  }\n\n  return (\n    <div className=\"Todo\">\n      <div className=\"Header\">\n        <h1>Sua lista de compras</h1>\n      </div>\n      {lista.map(number => {\n        return (\n          <div className=\"cesta\" key={number.id}>\n            <DragIndicatorIcon />\n            <Checkbox checked={number.isChecked} onChange={() => toggleChecked(number.id)}/>\n            <input type=\"text\"\n              placeholder=\"Digite o nome do novo item...\"\n              value={number.value}\n              onChange={e => editListItem(e.target.value,number.id)}\n            />\n            <button onClick={ed => handleDelete(number.id)}>X</button>\n          </div>\n        );\n      })}\n      <div className=\"Add\">\n        <button onClick={addLista}>+</button>\n        Adicione um novo item...\n      </div>\n    </div>\n  );\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}