{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/erick/Documentos/xoping-app/src/components/Todo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport firebase from 'firebase';\nimport './styles.css';\n\nfunction Todo() {\n  _s();\n\n  const [item, setItem] = useState('');\n\n  function handleChange(value) {}\n\n  useEffect(handleChange, [item]);\n\n  function handleDelete(ed) {\n    firebase.database().ref(ed).remove(item);\n  }\n\n  function editListItem(value, id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return { ...number,\n          value\n        };\n      }\n\n      return number;\n    });\n    setLista(newLista);\n    firebase.database().ref('/').set(newLista);\n  }\n\n  function toggleChecked(id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return { ...number,\n          isChecked: !number.isChecked\n        };\n      }\n\n      return number;\n    });\n    setLista(newLista);\n  }\n\n  useEffect(handleDelete, []);\n  const [lista, setLista] = useState([]);\n\n  function addLista() {\n    setLista([...lista, {\n      id: Math.floor(Math.random() * 100),\n      value: '',\n      isChecked: false\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sua lista de compras\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cesta\",\n      children: [/*#__PURE__*/_jsxDEV(DragIndicatorIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        style: {\n          fontSize: 24\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Digite um novo item aqui...\",\n        value: item,\n        onChange: e => setItem(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ed => setItem(ed.target.value),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, 'initial', true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), lista.map(number => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cesta\",\n        children: [/*#__PURE__*/_jsxDEV(DragIndicatorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: number.isChecked,\n          onChange: () => toggleChecked(number.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Digite o nome do novo item...\",\n          value: number.value,\n          onChange: e => editListItem(e.target.value, number.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ed => setItem(ed.target.value),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, number.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addLista,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \"Adicione um novo item...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"mEOVZE5YATWa9AeTgWYaL+MWuzk=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/erick/Documentos/xoping-app/src/components/Todo/index.js"],"names":["React","useEffect","useState","DragIndicatorIcon","Checkbox","firebase","Todo","item","setItem","handleChange","value","handleDelete","ed","database","ref","remove","editListItem","id","newLista","lista","map","number","setLista","set","toggleChecked","isChecked","addLista","Math","floor","random","fontSize","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport firebase from 'firebase'\n\nimport './styles.css';\n\nfunction Todo() {\n\n  const [item, setItem] = useState('');\n\n  function handleChange(value) {\n  }\n\n  useEffect(handleChange, [item])\n\n  function handleDelete(ed) {\n    firebase.database().ref(ed).remove(item)\n  }\n\n  function editListItem(value, id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return ({...number, value})\n      }\n\n      return number;\n    });\n    setLista(newLista);\n    firebase.database().ref('/').set(newLista)\n  }\n\n  function toggleChecked(id) {\n    const newLista = lista.map(number => {\n      if (number.id === id) {\n        return ({...number, isChecked:!number.isChecked})\n      }\n\n      return number;\n    });\n    setLista(newLista);\n  }\n\n  useEffect(handleDelete, [])\n\n  const [lista, setLista] = useState([]);\n\n  function addLista() {\n    setLista([\n      ...lista,\n      { id: (Math.floor(Math.random() * 100)), value: '', isChecked: false }\n    ])\n  }\n\n  return (\n    <div className=\"Todo\">\n      <div className=\"Header\">\n        <h1>Sua lista de compras</h1>\n      </div>\n      <div className=\"cesta\" key='initial'>\n            <DragIndicatorIcon />\n            <Checkbox style={{ fontSize: 24 }} />\n            <input type=\"text\"\n              placeholder=\"Digite um novo item aqui...\"\n              value={item}\n              onChange={e => setItem(e.target.value)}\n            />\n            <button onClick={ed => setItem(ed.target.value)}>X</button>\n          </div>\n      {lista.map(number => {\n        return (\n          <div className=\"cesta\" key={number.id}>\n            <DragIndicatorIcon />\n            <Checkbox checked={number.isChecked} onChange={() => toggleChecked(number.id)}/>\n            <input type=\"text\"\n              placeholder=\"Digite o nome do novo item...\"\n              value={number.value}\n              onChange={e => editListItem(e.target.value,number.id)}\n            />\n            <button onClick={ed => setItem(ed.target.value)}>X</button>\n          </div>\n        );\n      })}\n      <div className=\"Add\">\n        <button onClick={addLista}>+</button>\n        Adicione um novo item...\n      </div>\n    </div>\n  );\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}